//PACKAGE ORG.EBANKING.CONTROLLER;
//
//IMPORT ORG.EBANKING.DAO.*;
//IMPORT ORG.EBANKING.ENTITY.ADMIN;
//IMPORT ORG.EBANKING.ENTITY.AGENCE;
//IMPORT ORG.EBANKING.ENTITY.AGENT;
//IMPORT ORG.EBANKING.ENTITY.ROLE;
//IMPORT ORG.EBANKING.WEB.INPUTS.AGENCEINPUT;
//IMPORT ORG.EBANKING.WEB.INPUTS.AGENTINPUT;
//IMPORT ORG.SPRINGFRAMEWORK.BEANS.FACTORY.ANNOTATION.AUTOWIRED;
//IMPORT ORG.SPRINGFRAMEWORK.SECURITY.CRYPTO.PASSWORD.PASSWORDENCODER;
//IMPORT ORG.SPRINGFRAMEWORK.WEB.BIND.ANNOTATION.*;
//
//IMPORT JAVAX.VALIDATION.VALID;
//IMPORT JAVA.UTIL.LIST;
//
//@RESTCONTROLLER()
//@REQUESTMAPPING(VALUE = "/ADMIN")
////@SECURED(VALUE = {"ROLE_ADMIN"})
//PUBLIC CLASS ADMINCONTROLLER {
//
//    @AUTOWIRED
//    PRIVATE VILLEREPOSITORY VILLEREPOSITORY;
//    @AUTOWIRED
//    PRIVATE ROLEREPOSITORY ROLEREPOSITORY;
//    @AUTOWIRED
//    PRIVATE AGENCEREPOSITORY AGENCEREPOSITORY;
//    @AUTOWIRED
//    PRIVATE ADMINREPOSITORY ADMINREPOSITORY;
//    @AUTOWIRED
//    PRIVATE AGENTREPOSITORY AGENTREPOSITORY;
//    @AUTOWIRED
//    PRIVATE PASSWORDENCODER PASSWORDENCODER;
//
//    /**
//     *
//     * @PARAM AGENTINPUT
//     * @RETURN
//     */
//    @REQUESTMAPPING(VALUE = "/ADDNEWAGENT", METHOD = REQUESTMETHOD.POST)
//    PUBLIC AGENT ADDAGENT(@REQUESTBODY @VALID AGENTINPUT AGENTINPUT){
//        TRY {
//            RETURN AGENTREPOSITORY.SAVE(NEW AGENT(
//                    AGENTINPUT.GETNOM(),
//                    AGENTINPUT.GETPRENOM(),
//                    AGENTINPUT.GETADRESSE(),
//                    AGENTINPUT.GETTELEPHONE(),
//                    AGENTINPUT.GETEMAIL(),
//                    AGENTINPUT.GETUSERNAME(),
//                    PASSWORDENCODER.ENCODE(AGENTINPUT.GETPASSWORD()),
//                    AGENTINPUT.GETCIN(),
//                    AGENTINPUT.ISACTIVATED(),
//                    AGENCEREPOSITORY.FINDAGENCEBYID(AGENTINPUT.GETAGENCE()),
//                    ADMINREPOSITORY.FINDADMINBYID(AGENTINPUT.GETADMIN()),
//                    ROLEREPOSITORY.FINDROLEBYROLE("ROLE_AGENT")
//            ));
//        }CATCH (EXCEPTION E) {
//            THROW NEW RUNTIMEEXCEPTION("VALEUR EN DOUBLE DÉTECTÉE POUR LES CHAMPS EMAIL OU USERNAME !");
//        }
//    }
//
//    /**
//     *
//     * @PARAM ID
//     * @PARAM NEWAGENTINPUT
//     * @RETURN
//     */
//    @REQUESTMAPPING(VALUE = "/UPDATEAGENT/{ID}", METHOD = REQUESTMETHOD.POST)
//    PUBLIC AGENT UPDATEAGENT(@PATHVARIABLE INT ID, @REQUESTBODY @VALID AGENTINPUT NEWAGENTINPUT){
//
//        AGENT OLDAGENT = AGENTREPOSITORY.FINDAGENTBYID(ID);
//
//        IF (OLDAGENT != NULL) {
//            OLDAGENT.SETNOM(NEWAGENTINPUT.GETNOM());
//            OLDAGENT.SETPRENOM(NEWAGENTINPUT.GETPRENOM());
//            OLDAGENT.SETADRESSE(NEWAGENTINPUT.GETADRESSE());
//            OLDAGENT.SETTELEPHONE(NEWAGENTINPUT.GETTELEPHONE());
//            OLDAGENT.SETEMAIL(NEWAGENTINPUT.GETEMAIL());
//            OLDAGENT.SETUSERNAME(NEWAGENTINPUT.GETUSERNAME());
//            OLDAGENT.SETPASSWORD(PASSWORDENCODER.ENCODE(NEWAGENTINPUT.GETPASSWORD()));
//            OLDAGENT.SETCIN(NEWAGENTINPUT.GETCIN());
//            OLDAGENT.SETACTIVATED(NEWAGENTINPUT.ISACTIVATED());
//            OLDAGENT.SETAGENCE(AGENCEREPOSITORY.FINDAGENCEBYID(NEWAGENTINPUT.GETAGENCE()));
//            OLDAGENT.SETADMIN(ADMINREPOSITORY.FINDADMINBYID(NEWAGENTINPUT.GETADMIN()));
//            OLDAGENT.SETROLE(ROLEREPOSITORY.FINDROLEBYROLE("ROLE_AGENT"));
//
//            TRY {
//                RETURN AGENTREPOSITORY.SAVE(OLDAGENT);
//            }CATCH (EXCEPTION E) { THROW NEW RUNTIMEEXCEPTION("VALEUR EN DOUBLE DÉTECTÉE POUR LES CHAMPS EMAIL OU USERNAME !"); }
//        }
//
//        ELSE
//            THROW NEW RUNTIMEEXCEPTION("NO AGENT FOUND WITH ID(" + ID + ") !");
//    }
//
//    /**
//     *
//     * @PARAM ID
//     * @RETURN
//     */
//    @REQUESTMAPPING(VALUE = "/DELETEAGENT/{ID}", METHOD = REQUESTMETHOD.POST)
//    PUBLIC AGENT DELETEAGENT(@PATHVARIABLE INT ID){
//
//        AGENT AGENT = AGENTREPOSITORY.FINDAGENTBYID(ID);
//
//        IF (AGENT != NULL)
//             AGENTREPOSITORY.DELETE(AGENT);
//        ELSE
//            THROW NEW RUNTIMEEXCEPTION("NO AGENT FOUND WITH ID(" + ID + ") !");
//
//        RETURN NULL;
//    }
//
//
//    /**
//     *
//     * @RETURN
//     */
//    @REQUESTMAPPING(VALUE = "/GETAGENTS", METHOD = REQUESTMETHOD.GET)
//    PUBLIC LIST<AGENT> GETALLAGENTS(){
//        RETURN AGENTREPOSITORY.FINDALL();
//    }
//
//
//    // CRUD AGENCES ::
//
//    /**
//     *
//     * @RETURN
//     */
//    @REQUESTMAPPING(VALUE = "/GETAGENCES", METHOD = REQUESTMETHOD.GET)
//    PUBLIC LIST<AGENCE> GETALLAGENCES(){
//        RETURN AGENCEREPOSITORY.FINDALL();
//    }
//
//    /**
//     *
//     * @PARAM AGENCEINPUT
//     * @RETURN
//     */
//    @REQUESTMAPPING(VALUE = "/ADDNEWAGENCE", METHOD = REQUESTMETHOD.POST)
//    PUBLIC AGENCE ADDAGENCE(@REQUESTBODY @VALID AGENCEINPUT AGENCEINPUT){
//        TRY{
//            RETURN AGENCEREPOSITORY.SAVE(NEW AGENCE(
//                    AGENCEINPUT.GETNOM(),
//                    AGENCEINPUT.GETADRESSE(),
//                    VILLEREPOSITORY.FINDVILLEBYID(AGENCEINPUT.GETVILLE()),
//                    ADMINREPOSITORY.FINDADMINBYID(AGENCEINPUT.GETADMIN())
//            ));
//        }CATCH (EXCEPTION E) {
//            THROW NEW RUNTIMEEXCEPTION("VALEUR EN DOUBLE DÉTECTÉE POUR LE LIBELLE D'AGENCE (NOM)!");
//        }
//    }
//
//    /**
//     *
//     * @PARAM ID
//     * @PARAM NEWAGENCEINPUT
//     * @RETURN
//     */
//    @REQUESTMAPPING(VALUE = "/UPDATEAGENCE/{ID}", METHOD = REQUESTMETHOD.POST)
//    PUBLIC AGENCE UPDATEAGENCE(@PATHVARIABLE INT ID, @REQUESTBODY @VALID AGENCEINPUT NEWAGENCEINPUT){
//
//        AGENCE OLDAGENCE = AGENCEREPOSITORY.FINDAGENCEBYID(ID);
//
//        IF (OLDAGENCE != NULL) {
//            OLDAGENCE.SETNOM(NEWAGENCEINPUT.GETNOM());
//            OLDAGENCE.SETADRESSE(NEWAGENCEINPUT.GETADRESSE());
//            OLDAGENCE.SETVILLE(VILLEREPOSITORY.FINDVILLEBYID(NEWAGENCEINPUT.GETVILLE()));
//            OLDAGENCE.SETADMIN(ADMINREPOSITORY.FINDADMINBYID(NEWAGENCEINPUT.GETADMIN()));
//
//            TRY{
//                RETURN AGENCEREPOSITORY.SAVE(OLDAGENCE);
//            }CATCH (EXCEPTION E) { THROW NEW RUNTIMEEXCEPTION("VALEUR EN DOUBLE DÉTECTÉE POUR LE LIBELLE D'AGENCE (NOM)!"); }
//        }
//
//        ELSE
//            THROW NEW RUNTIMEEXCEPTION("NO AGENCE FOUND WITH ID(" + ID + ") !");
//    }
//
//    /**
//     *
//     * @PARAM ID
//     * @RETURN
//     */
//    @REQUESTMAPPING(VALUE = "/DELETEAGENCE/{ID}", METHOD = REQUESTMETHOD.POST)
//    PUBLIC AGENT DELETEAGENCE(@PATHVARIABLE INT ID){
//
//        AGENCE AGENCE = AGENCEREPOSITORY.FINDAGENCEBYID(ID);
//
//        IF (AGENCE != NULL)
//            AGENCEREPOSITORY.DELETE(AGENCE);
//        ELSE
//            THROW NEW RUNTIMEEXCEPTION("NO AGENCE FOUND WITH ID(" + ID + ") !");
//
//        RETURN NULL;
//    }
//
//
//
//
//
//}
